#ifndef UNITDATA_H
#define UNITDATA_H

#include "unitconv.h"

/* Length */
#define LIGHTSECOND_TO_METRE 2.99792458e8
#define NAUTICAL_MILE_TO_METRE 1852
#define FOOT_TO_METRE 3.048e-1
#define INCH_TO_METRE (FOOT_TO_METRE/12)
#define CHAIN_TO_METRE (FOOT_TO_METRE*66)
#define MILE_TO_METRE (FOOT_TO_METRE*5280)
#define SURVEY_FOOT_TO_METRE (1200.0/3937.0)
#define CHINESE_FOOT_TO_METRE (1.0/3.0)
#define HK_FOOT_TO_METRE 3.71475e-1
#define JAPANESE_FOOT_TO_METRE (10.0/33.0)

/* Area */
#define SQFOOT_TO_SQMETRE (HK_FOOT_TO_METRE*HK_FOOT_TO_METRE)
#define ACRE_TO_SQMETRE (CHAIN_TO_METRE*CHAIN_TO_METRE*10)
#define SURVEY_SQFOOT_TO_SQMETRE (SURVEY_FOOT_TO_METRE*SURVEY_FOOT_TO_METRE)
#define CHINESE_MU_TO_SQMETRE (2000.0/3.0)
#define CHINESE_SQFOOT_TO_SQMETRE (CHINESE_FOOT_TO_METRE*CHINESE_FOOT_TO_METRE)
#define JAPANESE_TSUBO_TO_SQMETRE (JAPANESE_FOOT_TO_METRE*JAPANESE_FOOT_TO_METRE*36)

/* Mass */
#define POUND_AV_TO_KILOGRAM 4.5359237e-1
#define GRAIN_TO_KILOGRAM (POUND_AV_TO_KILOGRAM/7000)
#define POUND_TROY_TO_KILOGRAM (GRAIN_TO_KILOGRAM*5760)
#define CATTY_TO_KILOGRAM 5e-1
#define HK_CATTY_TO_KILOGRAM 6.0478982e-1
#define JAPANESE_CATTY_TO_KILOGRAM 6e-1

/* Time */
#define MINUTE_TO_SECOND 60
#define HOUR_TO_SECOND 3600
#define DAY_TO_SECOND 86400

/* Energy */
#define ELECTRONVOLT_TO_JOULE 1.60217653e-19
#define WATTHOUR_TO_JOULE HOUR_TO_SECOND
#define CALORIE_IT_TO_JOULE 4.1868
#define CALORIE_TH_TO_JOULE 4.184
#define BTU_IT_TO_JOULE 1.05505585262e3
#define BTU_59F_TO_JOULE 1.054804e3
#define FOOTLBF_TO_JOULE 1.3558179483314004

/* Mass-energy equivalence (E = m c^2) */
#define KILOGRAM_TO_ELECTRONVOLT 1.782661845e-36

/* Functions */
int conv_length(double, char *, unsigned int);
int conv_area(double, char *, unsigned int);
int conv_mass(double, char *, unsigned int);
int conv_energy(double, char *, unsigned int);
int conv_temperature(double, char *, unsigned int);

#endif /* UNITDATA_H */
